#!/bin/bash

if [ -z $1 ]
then
    echo -e "\nUsage: ezdot [options]\nUsage: ezdot [path-to-csproj]\n\nOptions:\n  -h|--help\tDisplay help.\n  -n|--new\tNew console app.\n  --version\tDisplay .net version.\n"
    exit 0
fi

if [ $1 == "-h" ] || [ $1 == "--help" ]
then
    echo -e "\nUsage: ezdot [options]\nUsage: ezdot [path-to-csproj]\n\nOptions:\n  -h|--help\tDisplay help.\n  -n|--new\tNew console app.\n  --version\tDisplay .net version."
    exit 0
elif [ $1 == "-n" ] || [ $1 == "--new" ]
then
    dotnet new console --name $2 --use-program-main true --framework net7.0 --langVersion 11

    echo -e 'using System;\n\nnamespace '$2'\n{\n\tinternal unsafe class Program\n\t{\n\t\tstatic void Main(string[] args)\n\t\t{\n\t\t\tConsole.WriteLine("Hello World!");\n\t\t}\n\t}\n}' > './'$2'/Program.cs'
    echo -e '<Project Sdk="Microsoft.NET.Sdk">\n\n\t<PropertyGroup>\n\t\t<OutputType>Exe</OutputType>\n\t\t<TargetFramework>net7.0</TargetFramework>\n\t\t<LangVersion>11</LangVersion>\n\t\t<ImplicitUsings>disable</ImplicitUsings>\n\t\t<Nullable>enable</Nullable>\n\t\t<AllowUnsafeBlocks>true</AllowUnsafeBlocks>\n\t</PropertyGroup>\n\n</Project>' > './'$2'/'$2'.csproj'
elif [ $1 == "--version" ]
then
    dotnet --version
else
    while true
    do
        read -n 1 -s -r -p $'\rRun: r | Build & Run: b' choice
        echo
        case $choice in
            r)
                ./bin/Debug/net7.0/$1
                ;;
            b)
                sudo dotnet run $1
                ;;
            $'\e')
                exit 0
                ;;
        esac
    done
fi

